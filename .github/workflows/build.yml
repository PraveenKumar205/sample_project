name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
        - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Verify MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python-dev nginx-extras pkg-config cmake libxrender1 libmysqlclient-dev ncurses-dev gettext flex bison autoconf binutils-doc redis-tools vim nfs-common jq bc
          mysql --host 127.0.0.1 --port 33306 -uroot -ppassword -e "SHOW GRANTS FOR 'root'@'localhost'"
          mysql --host 127.0.0.1 --port 33306 -uroot -ppassword -e "SET GLOBAL sql_mode = ''"
          mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port 33306 -uroot -ppassword mysql
      # - name: Setup Ruby and install gems
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: 2.7.3
      #     bundler-cache: true
      # - name: Create DB
      #   env:
      #     RAILS_ENV: test
      #   run: |
      #     gem install bundler --version 1.17.3
      #     bundle install
      #     bin/rails db:setup

      # - name: Unit tests and coverage report
      #   run: bundle exec rspec --format doc

      - name: Fix code coverage paths
        working-directory: ./coverage
        run: |
          ls -a
          sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage.json
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}